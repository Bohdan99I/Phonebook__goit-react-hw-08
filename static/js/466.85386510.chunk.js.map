{"version":3,"file":"static/js/466.85386510.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border: 3px solid black;\n  border-radius: 5px;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: rgb(129, 159, 237);\n  box-shadow: rgb(34, 34, 34) -4px -5px 19px;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 25px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  gap: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 30px;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  margin: 0px auto;\n  border-radius: 4px;\n  border: 2px solid black;\n  padding: 5px 10px;\n  background: rgb(15, 111, 66);\n  color: white;\n  font-size: 15px;\n`;","import React, { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { Form, FormLabel, Input, Button } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contactsList);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const lowerCaseName = name.toLowerCase();\n\n    if (contacts.some(item => item.name.toLowerCase() === lowerCaseName)) {\n      Notiflix.Report.warning('warning', `${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n      Notiflix.Notify.success(`${name} added successfully`);\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <FormLabel>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </FormLabel>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListWrapper = styled.ul`\n  list-style: none;\n  padding: 0;  \n`;\n\nexport const ContactListItem = styled.li`\n  height: 75px;\n  padding: 10px 15px;\n  border: 3px solid black;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  background-color: rgb(129, 159, 237);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;\n\nexport const ContactName = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const ContactButton = styled.button`\n  border-radius: 4px;\n  border: 2px solid black;\n  padding: 5px 10px;\n  background: rgb(15, 111, 66);\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n`;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/operations';\nimport {\n  ContactListWrapper,\n  ContactListItem,\n  ContactName,\n  ContactButton,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.contactsList);\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactListWrapper>\n      {filteredContacts.map(contact => {\n        return (\n          <ContactListItem key={contact.id}>\n            <div>\n              <ContactName>{contact.name}:</ContactName>\n              <p>{contact.number}</p>\n            </div>\n            <ContactButton\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete\n            </ContactButton>\n          </ContactListItem>\n        );\n      })}\n    </ContactListWrapper>\n  );\n};","import styled from '@emotion/styled';\n\nexport const WrapperFilter = styled.div`\n  text-align: center;\n`;\n\nexport const FilterLabel = styled.label`\n  font-size: 28px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  gap: 5px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FilterInput = styled.input`\n  width: 250px;\n  height: 30px;\n  border-radius: 4px;\n  font-size: 20px;\n`;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlise';\nimport { FilterLabel, FilterInput, WrapperFilter } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  const handleFilterChange = event => {\n    const newFilterValue = event.target.value;\n    dispatch(changeFilter(newFilterValue));\n  };\n\n  return (\n    <WrapperFilter>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput type=\"text\" value={filter} onChange={handleFilterChange} />\n      </FilterLabel>\n    </WrapperFilter>\n  );\n};","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  background-color: green;\n  margin: 0px auto;\n  padding: 15px;\n  width: 400px;\n  border-radius: 8px;\n`;\n\nexport const H2 = styled.h2`\n  text-align: center;\n  font-size: 30px;\n  margin-bottom: 15px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Wrapper, H2 } from 'components/App.styled';\n\nconst Contacts = () => {\n  const contacts = useSelector(state => state.contacts.contactsList);\n  const filter = useSelector(state => state.filter);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <Wrapper>\n      <H2>Phonebook</H2>\n      <ContactForm />\n      <H2>Contacts</H2>\n      <Filter />\n      <ContactList visibleContact={visibleContacts} />\n    </Wrapper>\n  );\n};\n\nexport default Contacts;"],"names":["Form","styled","FormLabel","Input","Button","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","state","contactsList","handleChange","event","target","value","onSubmit","preventDefault","lowerCaseName","toLowerCase","some","item","Notiflix","addContact","type","pattern","title","required","onChange","ContactListWrapper","ContactListItem","ContactName","ContactButton","ContactList","filter","filteredContacts","contact","includes","useEffect","fetchContacts","map","onClick","deleteContact","id","WrapperFilter","FilterLabel","FilterInput","Filter","newFilterValue","changeFilter","Wrapper","H2","visibleContacts","visibleContact"],"sourceRoot":""}